[["index.html", "Portfolio bookdown Chapter 1 Portfolio opdrachten bookdown", " Portfolio bookdown Abdurrahman Uyar Chapter 1 Portfolio opdrachten bookdown "],["effects-of-different-compounds-on-c.elegans-offspring.html", "Chapter 2 Effects of different compounds on C.elegans offspring", " Chapter 2 Effects of different compounds on C.elegans offspring library(tidyverse) library(readxl) library(here) data &lt;- read_excel(here(path = &quot;Data/CE.LIQ.FLOW.062_Tidydata.xlsx&quot;)) #checken datatypes van de variabelen str(data) Na checken van de datatypen van RawData, compName en compConcentration hebben deze respectievelijk numeric, character en character als datatype. compConcentration zou numeric moeten zijn. Anders zou de plot er als volgt uit zien: data %&gt;% ggplot(aes(x = compConcentration, y = RawData, colour = compName, shape = expType)) + geom_point() + theme_bw() + theme(axis.text.x = element_text(angle = 90)) Omdat de variabele compConcentration als character staat wordt deze niet in de juiste volgorde geplot. #aanpassen datatypes data$compName &lt;- as.factor(data$compName) data$compConcentration &lt;- as.numeric(data$compConcentration) #data iets makkelijker leesbaar maken door beperkt aantal kolommen mee te nemen data2 &lt;- data %&gt;% select(vialNr, dropCode, expType, expReplicate, RawData, compName, compConcentration, compUnit, compVehicle) #log10 van compConcentration en geom_jitter en geom_smooth zodat de plot iets duidelijker te volgen is. data2 %&gt;% ggplot(aes(x = log10(compConcentration), y = RawData, colour = compName, shape = expType)) + theme_bw() + geom_jitter(width = 0.2) + labs(title = &quot;Offspring C. elegans after incubation with decane, napthalene, \\n2,6-diisopropylnapthalene, S-medium or ethanol&quot;, x = &quot;Log10 concentration component&quot;, y = &quot;Offspring amount&quot;) Vergeleken met de vorige plot is hier de variabele compConcentration wel omgezet in numeric (en ook log10 van genomen). Verder is ook geom_jitter gebruikt zodat datapunten niet zoveel overlappen met elkaar. De positieve controle voor dit experiment is ethanol, de negatieve controle voor dit experiment is S-medium. #Neem de gemmiddelde nakomelingen per middel, per concentratie. summary_data &lt;- data2 %&gt;% group_by(compName, compConcentration,expType) %&gt;% summarise(gem = mean(RawData, na.rm = T)) #Verkrijg de gemiddelde offspring count van de negatieve controle nc_gem &lt;- summary_data$gem[summary_data$expType == &quot;controlNegative&quot;] #Maak een nieuwe kolom aan waarbij er genormaliseerd wordt door de fractie te nemen ten opzichte van de negatieve controle, waarbij de nc gelijk staat aan 1.0 summary_data &lt;- summary_data %&gt;% mutate(fractie = gem/nc_gem) #filter zodat positieve/negatieve controles niet geplot worden summary_plotting &lt;- summary_data %&gt;% filter(compName == &quot;decane&quot; | compName == &quot;2,6-diisopropylnaphthalene&quot; | compName == &quot;naphthalene&quot;) summary_plotting %&gt;% ggplot(aes(x = log10(compConcentration), y = fractie, colour = compName)) + geom_point() + geom_smooth() + theme_bw() + ylim(0,1.3) + labs(title = &quot;Offspring C. elegans after treatment with decane, napthalene \\nor 2,6-diisopropylnaphthalene&quot;, x = &quot;Log10 component concentration&quot;, y = &quot;Fraction offspring (relative to, negative control)&quot;) + guides(color = guide_legend(&quot;Component&quot;)) + scale_colour_manual(values = c(&quot;red&quot;,&quot;blue&quot;,&quot;darkgreen&quot;)) In deze plot is de data genormaliseerd ten opzichte van de negatieve controle (S-medium), waarbij de nakomelingen van C.elegans die voort zijn gekomen uit de incubatie met S-medium gelijk staat aan 1.0 Er is genormaliseerd zodat de verschillende stoffen makkelijker vergeleken kunnen worden met de negatieve controle, waarvan je weet dat het geen effect zou moeten hebben. Als er gekeken zou worden of er daadwerkelijk een statistisch significant verschil is tussen de compounds en de offspring count in C elegans zouden de volgende stappen worden uitgevoerd: 1: Shapiro wilk test op de verschillende groepen, om te kijken of de data normaal verdeeld is 2: Als data normaal verdeeld is, ook not een Levene’s test uitvoeren omdat het ontwerp van het experiment ongepaard is. 3: Daarna kunnen ook ongepaarde t-tests worden gedaan. "],["transparency-criteria.html", "Chapter 3 Transparency criteria", " Chapter 3 Transparency criteria Article: Epidemiological and evolutionary consequences of different types of CRISPR-Cas systems Authors: Hélène Chabas, Viktor Müller, Sebastian Bonhoeffer and Roland R. Regoes The general aim of this study was to determine the importance of molecular differences between 3 types of CRISPR-cas systems. The authors developed a stochastic epidemiological model for this. Outcome would be that type 3 systems could outcompete type 1 and 2. This is because for type 1 and 2 the control of phage evolution is mediated by spacer diversity and there is a diversity critical threshold whereas for type 3 CRISPR-Cas systems, spacer diversity does not impact phage extinction and the epidemiological outcome is driven by the probability to generate at least one resistant genotype. library(tibble) score_table &lt;- tibble(`Transparency criteria` = c(&quot;Study purpose&quot;, &quot;Data availability statement&quot;, &quot;Data location&quot;, &quot;Study location&quot;, &quot;Author review&quot;, &quot;Ethics statement&quot;, &quot;Funding statement&quot;, &quot;Code availability&quot;), Score = c(&quot;Yes&quot;, &quot;Yes&quot;, &quot;Data location not stated&quot;, &quot;No&quot;, &quot;Tier 4&quot;, &quot;No&quot;, &quot;Yes&quot;, &quot;Yes&quot;) ) knitr::kable(score_table) Transparency criteria Score Study purpose Yes Data availability statement Yes Data location Data location not stated Study location No Author review Tier 4 Ethics statement No Funding statement Yes Code availability Yes For trying to reproduce a figure I’ve decided to use the following article: Title: Monitoring trends and differences in COVID-19 case fatality rates using decomposition methods: Contributions of age structure and age-specific fatality. Authors: Christian Dudel Tim Riffe Enrique Acosta Alyson van Raalte Cosmo Strozza Mikko Myrskylä Question 1: Have a look at the code. Describe in your own words what the code intents to achieve. Answer 1: The code intents to achieve a plot that shows how the death rate progresses as COVID-19 cases rise per country and New York City. Question 2: In terms of readibility of the code, how would you grade (1(very bad)-5(very good)) the code available. Answer 2: I would grade it a 3. The filtering steps are harder to read for me, but the plotting itself is quite readable. Question 3: Taken together on a scale from 1 (very hard) to 5 (very easy), how much effort did it take you to reproduce the visualization from the project, report or article Answer 3: I would grade it a 5. The only thing that had to be changed was the path for the inputfile. ### Monitoring trends and differences in COVID-19 case fatality ############## ### rates using decomposition methods: A demographic perspective ############## ### Last updated: 2020-07-22 11:18:52 CEST ### Contact: ### riffe@demogr.mpg.de ### acosta@demogr.mpg.de ### dudel@demogr.mpg.de ### Packages ################################################################## library(tidyverse) library(ggrepel) library(scales) ## ## Attaching package: &#39;scales&#39; ## The following object is masked from &#39;package:purrr&#39;: ## ## discard ## The following object is masked from &#39;package:readr&#39;: ## ## col_factor library(here) ### Load data ################################################################# # Load data db_gh &lt;- read_csv(here(&quot;Data/inputdata.csv&quot;)) ## Rows: 13651 Columns: 9 ## ── Column specification ────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (5): Country, Region, Code, Date, Sex ## dbl (4): Age, AgeInt, Cases, Deaths ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. view(db_gh) ### Aggregate data ############################################################ # Filter date db_gh$Date &lt;- as.Date(db_gh$Date,&quot;%d.%m.%y&quot;) db_gh2 &lt;- db_gh %&gt;% filter(Date&lt;=as.Date(&quot;30.06.2020&quot;,&quot;%d.%m.%y&quot;)) # Set New York as &quot;country&quot; (easier handling) db_gh2$Country[db_gh2$Country==&quot;USA&quot; &amp; db_gh2$Region == &quot;NYC&quot;] &lt;- &quot;NYC&quot; # Sum data over age groups db_gh2 &lt;- db_gh2 %&gt;% filter(!Country %in% c(&quot;China&quot;,&quot;USA&quot;,&quot;South Korea&quot;) &amp; Sex == &quot;b&quot;) %&gt;% group_by(Country, Code,Date) %&gt;% summarise(Cases = sum(Cases), Deaths = sum(Deaths)) ## `summarise()` has grouped output by &#39;Country&#39;, &#39;Code&#39;. ## You can override using the `.groups` argument. # Exclude bolletino db_gh2 &lt;- db_gh2 %&gt;% filter(str_sub(Code, 1, 5) != &quot;ITbol&quot;) # Sort by date db_gh2 &lt;- db_gh2 %&gt;% group_by(Country) %&gt;% arrange(Date) # Smooth reporting issues cases for(country in unique(db_gh2$Country)) { days &lt;- db_gh2$Date[db_gh2$Country==country] for(day in 2:length(days)) { current &lt;- db_gh2$Cases[db_gh2$Country==country &amp; db_gh2$Date==days[day]] previous &lt;- db_gh2$Cases[db_gh2$Country==country &amp; db_gh2$Date==days[day-1]] if(current&lt;previous) db_gh2$Cases[db_gh2$Country==country &amp; db_gh2$Date==days[day]] &lt;- previous } } # Smooth reporting issues deaths for(country in unique(db_gh2$Country)) { days &lt;- db_gh2$Date[db_gh2$Country==country] for(day in 2:length(days)) { current &lt;- db_gh2$Deaths[db_gh2$Country==country &amp; db_gh2$Date==days[day]] previous &lt;- db_gh2$Deaths[db_gh2$Country==country &amp; db_gh2$Date==days[day-1]] if(current&lt;previous) db_gh2$Deaths[db_gh2$Country==country &amp; db_gh2$Date==days[day]] &lt;- previous } } ### Plot settings ############################################################# # Set colors col_country &lt;- c(&quot;Germany&quot; = &quot;black&quot;, &quot;Italy&quot; = &quot;#2ca25f&quot;, &quot;NYC&quot;=&quot;#f0027f&quot;, &quot;Spain&quot;=&quot;#beaed4&quot;, &quot;South Korea&quot;=&quot;#fdc086&quot;)#, #&quot;USA&quot;=&quot;#386cb0&quot;) cols &lt;- c(&quot;black&quot;, &quot;#2ca25f&quot;, &quot;#f0027f&quot;, &quot;#beaed4&quot;, &quot;#fdc086&quot;)#, #&quot;#386cb0&quot;) # Axis labs &lt;- db_gh2 %&gt;% group_by(Country) %&gt;% filter(Cases == max(Cases)) %&gt;% mutate(Cases = Cases + 3000) # Including all reports tx &lt;- 6 lim_x &lt;- 240000 ### Plot ###################################################################### db_gh2 %&gt;% ggplot(aes(Cases, Deaths, col = Country))+ geom_line(size = 1, alpha = .9)+ scale_x_continuous(expand = c(0,0), breaks = seq(0, 300000, 50000), limits = c(0, lim_x + 30000), labels = comma)+ scale_y_continuous(expand = c(0,0), breaks = seq(0, 40000, 5000), limits = c(0, 40000), labels = comma)+ annotate(&quot;segment&quot;, x = 0, y = 0, xend = lim_x, yend = lim_x * .02, colour = &quot;grey40&quot;, size = .5, alpha = .3, linetype = 2)+ annotate(&quot;segment&quot;, x = 0, y = 0, xend = lim_x, yend = lim_x * .05, colour = &quot;grey40&quot;, size = .5, alpha = .3, linetype = 2)+ annotate(&quot;segment&quot;, x = 0, y = 0, xend = lim_x, yend = lim_x * .10, colour = &quot;grey40&quot;, size = .5, alpha = .3, linetype = 2)+ annotate(&quot;segment&quot;, x = 0, y = 0, xend = lim_x, yend = lim_x * .15, colour = &quot;grey40&quot;, size = .5, alpha = .3, linetype = 2)+ annotate(&quot;text&quot;, label = &quot;2% CFR&quot;, x = lim_x + 1000, y = lim_x * .02, color=&quot;grey30&quot;, size = tx * .3, alpha = .6, hjust = 0, lineheight = .8) + annotate(&quot;text&quot;, label = &quot;5% CFR&quot;, x = lim_x + 1000, y = lim_x * .05, color=&quot;grey30&quot;, size = tx * .3, alpha = .6, hjust = 0, lineheight = .8) + annotate(&quot;text&quot;, label = &quot;10% CFR&quot;, x = lim_x + 1000, y = lim_x * .10, color=&quot;grey30&quot;, size = tx * .3, alpha = .6, hjust = 0, lineheight = .8) + annotate(&quot;text&quot;, label = &quot;15% CFR&quot;, x = lim_x + 1000, y = lim_x * .15, color=&quot;grey30&quot;, size = tx * .3, alpha = .6, hjust = 0, lineheight = .8) + scale_colour_manual(values = cols)+ geom_text(data = labs, aes(Cases, Deaths, label = Country), size = tx * .35, hjust = 0, fontface = &quot;bold&quot;) + theme_classic()+ labs(x = &quot;Cases&quot;, y = &quot;Deaths&quot;)+ theme( panel.grid.minor = element_blank(), legend.position = &quot;none&quot;, plot.margin = margin(5,5,5,5,&quot;mm&quot;), axis.text.x = element_text(size = tx), axis.text.y = element_text(size = tx), axis.title.x = element_text(size = tx + 1), axis.title.y = element_text(size = tx + 1) ) ## Warning: Using `size` aesthetic for lines was deprecated in ## ggplot2 3.4.0. ## ℹ Please use `linewidth` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where ## this warning was generated. "],["folder-structures.html", "Chapter 4 Folder structures 4.1 Folder structure of DAUR2: 4.2 Folder structure of workflows (at time of making folder structure):", " Chapter 4 Folder structures library(png) library(grid) library(gridExtra) ## ## Attaching package: &#39;gridExtra&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## combine library(here) daur2_fs &lt;- rasterGrob(as.raster(readPNG(here(&quot;Figures/DAUR2_fs.png&quot;)))) workflows_fs &lt;- rasterGrob(as.raster(readPNG(here(&quot;Figures/workflows_fs_.png&quot;)))) 4.1 Folder structure of DAUR2: grid.arrange(daur2_fs) 4.2 Folder structure of workflows (at time of making folder structure): grid.arrange(workflows_fs) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
